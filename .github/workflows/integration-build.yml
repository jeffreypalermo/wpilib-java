name: Integration Build

on:
  push:
    branches:
      - master
      - 'feature/**'
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Gradle Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    env:
      GRADLE_OPTS: >-
        -Dorg.gradle.internal.http.connectionTimeout=60000
        -Dorg.gradle.internal.http.socketTimeout=120000
        -Djava.net.preferIPv4Stack=true
        -Djava.net.preferIPv6Addresses=false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init Gradle Wrapper (Unix)
        if: runner.os != 'Windows'
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          timeout_minutes: 5
          retry_on: error
          command: |
            ./gradlew --version

      - name: Init Gradle Wrapper (Windows)
        if: runner.os == 'Windows'
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          timeout_minutes: 5
          retry_on: error
          shell: powershell
          command: |
            .\gradlew.bat --version

      - name: Pre-warm dependencies (Unix)
        if: runner.os != 'Windows'
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          timeout_minutes: 20
          retry_on: error
          command: |
            ./gradlew -Dorg.gradle.caching=true compileJava testClasses -x test --no-daemon --stacktrace

      - name: Pre-warm dependencies (Windows)
        if: runner.os == 'Windows'
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          timeout_minutes: 20
          retry_on: error
          shell: powershell
          command: |
            .\gradlew.bat -Dorg.gradle.caching=true compileJava testClasses -x test --no-daemon --stacktrace
      - name: Official wrapper validation
        uses: gradle/wrapper-validation-action@v2

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle (Unix)
        if: runner.os != 'Windows'
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          retry_on: error
          command: |
            ./gradlew clean build jacocoTestReport jacocoTestCoverageVerification --no-daemon --stacktrace

      - name: Build with Gradle (Windows)
        if: runner.os == 'Windows'
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          retry_on: error
          shell: powershell
          command: |
            .\gradlew.bat clean build jacocoTestReport jacocoTestCoverageVerification --no-daemon --stacktrace

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ matrix.os }}
          path: |
            build/reports/tests/test/**/*
            build/test-results/test/**/*

      - name: Upload JaCoCo coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-${{ matrix.os }}
          path: |
            build/reports/jacoco/**/*
            build/reports/jacoco/test/jacocoTestReport.xml
